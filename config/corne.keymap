/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-trigger-key-positions = <6 7 8 9 10 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        tap_7: tap_7 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_7";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp RA(N7)>;

            tapping-term-ms = <180>;
        };

        tap_0: tap_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_0";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp RA(N0)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&hml ESC TAB      &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P      &kp LEFT_BRACKET
&kp LSHIFT        &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI   &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp BACKSPACE
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC    &kp N1        &kp N2        &kp N3        &kp EQUAL  &kp PRINTSCREEN         &trans    &trans        &trans     &trans  &trans  &trans
&kp LSHFT  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans     &kp NON_US_BACKSLASH    &trans    &kp UP_ARROW  &trans     &trans  &trans  &kp BACKSLASH
&kp LCTRL  &kp N7        &kp NUMBER_8  &kp N9        &kp N0     &kp MINUS               &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans  &kp DELETE
                                       &kp LEFT_ALT  &trans     &kp RIGHT_ALT           &kp RET   &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB         &kp F1  &kp F2  &kp F3    &trans  &trans       &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &trans  &trans  &out OUT_TOG
&kp LEFT_SHIFT  &kp F4  &kp F5  &kp F6    &trans  &trans       &trans      &trans      &trans      &trans  &trans  &trans
&kp LCTRL       &kp F7  &kp F7  &kp F8    &kp F9  &trans       &trans      &trans      &trans      &trans  &trans  &trans
                                &kp LGUI  &trans  &kp SPACE    &kp RET     &trans      &kp RALT
            >;
        };

        combo_layer {
            bindings = <
&tap_7  &kp N8  &kp N9  &tap_0  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        combo_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
